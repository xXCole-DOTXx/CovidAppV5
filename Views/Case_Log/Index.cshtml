@model PagedList.IPagedList<CovidAppV5.Models.Case_Log>

@using PagedList.Mvc;
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

    @{
        ViewBag.Title = "Index";
    }

<h2>COVID 19 Questionnaires</h2>

<h4>There were @ViewBag.resultCount results.</h4>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <p>
        @Html.ActionLink("Convert View To PDF", "pdfIndex", "Case_Log", 
      new {                                                     // routeValues
        searchString = ViewBag.CurrentFilter,
        sort = ViewBag.CurrentSort,
        expDateFrom = ViewBag.ExpDateFrom,
        expDateTo = ViewBag.ExpDateTo
          },
    null)
    </p>

    @using (Html.BeginForm("Index", "Case_Log", FormMethod.Get))
    {
    <div class="row">
        <div class="col-md-4">
            <p>Find by name, org number, district/division:</p>
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        </div>
        <div class="col-md-4">
            <p>Exposure Date From:</p>
            @Html.TextBox("ExpDateFrom", ViewBag.ExpDateFrom as string)
        </div>
        <div class="col-md-4">
            <p>Exposure Date To:</p>
            @Html.TextBox("ExpDateTo", ViewBag.ExpDateTo as string)
            <input type="submit" value="Search" />
        </div>
    </div>
    }

       <br />    

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, ExpDateFrom = ViewBag.ExpDateFrom, ExpDateTo = ViewBag.ExpDateTo })
            </th>
            <th>
                Phone Number
            </th>
            <th>
                @Html.ActionLink("District/Division", "Index", new { sortOrder = ViewBag.DivSortParm, currentFilter = ViewBag.CurrentFilter, ExpDateFrom = ViewBag.ExpDateFrom, ExpDateTo = ViewBag.ExpDateTo })
            </th>
            <th>
                @Html.ActionLink("Organization Number", "Index", new { sortOrder = ViewBag.OrgSortParm, currentFilter = ViewBag.CurrentFilter, ExpDateFrom = ViewBag.ExpDateFrom, ExpDateTo = ViewBag.ExpDateTo })
            </th>
            <th>
                Date of Test
            </th>
            <th>
                Date of Exposure
            </th>
            <th>
                Number of exposed
            </th>
            <th>
                First Shot
            </th>
            <th>
                Second Shot
            </th>
            <th>
                14 Days
            </th>
            <th>
                Notes
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Division_District)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrgNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfTest)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfExposure)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumberOfExposed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstShot)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SecondShot)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PostVac14Days)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ID, searchString = ViewBag.CurrentFilter, sort = ViewBag.CurrentSort, page = ViewBag.Page }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        </td>
    </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

